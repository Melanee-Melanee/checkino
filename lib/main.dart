/// Generated by Flutter GetX Starter on 2022-02-16 21:02
import 'package:checkino/app/common/ThemeController.dart';
import 'package:checkino/app/pages/home/home_logic.dart';
import 'package:easy_localization/easy_localization.dart';
import 'package:window_manager/window_manager.dart';

//import 'package:bitsdojo_window/bitsdojo_window.dart';
import 'package:checkino/app/pages/home/home_page.dart';
import 'dart:io';
import 'package:flutter/material.dart';

import 'package:get/get.dart';

import 'app/common/app_route.dart';
import 'app/common/language.dart';
Future<void> main() async {



 await WidgetsFlutterBinding.ensureInitialized();
await windowManager.ensureInitialized();



final initialSize = Size(500, 500);
windowManager.waitUntilReadyToShow().then((_) async{
  await windowManager.setTitleBarStyle('hidden');
  await windowManager.setAlwaysOnTop(true);
  await windowManager.setMovable(true);
  await windowManager.setSize(initialSize);
  await windowManager.setMaximumSize(initialSize);
  await windowManager.setMinimumSize(initialSize);
  await windowManager.setResizable(false);
  await windowManager.setAlignment(Alignment.bottomRight);
  await windowManager.show();

 // await windowManager.setSkipTaskbar(true);
});
// Hide w
  await EasyLocalization.ensureInitialized();



  runApp(
    EasyLocalization(
        supportedLocales: [Locale('en'), Locale('fa')],
        path: 'assets/translations', // <-- change the path of the translation files
        fallbackLocale: Locale('en', 'US'),
        child: MyApp2()
    ),
  );
 /* doWhenWindowReady(() {
    final initialSize = Size(500, 500);
    appWindow.minSize = initialSize;
    appWindow.maxSize = initialSize;
    appWindow.size = initialSize;
    appWindow.alignment = Alignment.bottomRight;
    appWindow.show();
  });*/
}

class _MoveWindow extends StatelessWidget {
  _MoveWindow({Key? key, this.child}) : super(key: key);
  final Widget? child;
  @override
  Widget build(BuildContext context) {
    return GestureDetector(
        behavior: HitTestBehavior.translucent,
        onPanStart: (details) {
          windowManager.startDragging();
        },
        onDoubleTap: () => windowManager.maximize(),
        child: this.child ?? Container());
  }
}

class MyApp2 extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    Get.put(ThemeController(),);
    return GetMaterialApp(

      title: "Checkino",

      initialBinding: RootBinding(),
      initialRoute: Routes.SPLASH,
      debugShowCheckedModeBanner: false,
      getPages: Routes.routes,
      translations: Language(faLanguage: FaLanguage(), enLanguage: EnLanguage()),
      localizationsDelegates: context.localizationDelegates,
      supportedLocales: context.supportedLocales,
      locale: context.locale,
      fallbackLocale: Locale("en"),
      theme: Get.find<ThemeController>().theme,
    );
  }

}

enum InterfaceBrightness {
  light,
  dark,
  auto,
}
class WindowTitleBar extends StatelessWidget {
  final InterfaceBrightness brightness = InterfaceBrightness.dark;

  @override
  Widget build(BuildContext context) {

    return _MoveWindow(
      child: Container(
        width: MediaQuery.of(context).size.width,
        child: Row(
          mainAxisAlignment: MainAxisAlignment.end,
          children: [
            InkWell(
              onTap: (){
                windowManager.minimize();
              },
              child: Container(
                width: 15,
                height: 15,
                margin: EdgeInsets.all(12),
                child: Image.asset('assets/image/minus.png'),
              ),
            ),
            InkWell(
              onTap: (){
                windowManager.close();
                exit(0);
              },
              child: Container(
                width: 15,
                height: 15,
                margin: EdgeInsets.all(12),
                child: Image.asset('assets/image/close.png'),
              ),
            ),

          ],
        ),
      ),
    );

  }
}
class RootBinding implements Bindings {
  @override
  void dependencies() {
    Get.put(ThemeController(),);
    Get.put(HomeLogic());
  }
}